name: CI-with-docker

on: 
  workflow_dispatch:

jobs:
  build:
    name: Build on Ubuntu
    runs-on: ubuntu-20.04
    steps:
    - name: checkout td_env
      uses: actions/checkout@v3
      with:
         fetch-depth: 1
         ref: ''
    - name: Load and run image
      run: |
        docker pull lsstdesc/td-env:dev
        cd $GITHUB_WORKSPACE
        docker run -u lsst -w /opt/lsst/software/stack lsstdesc/td-env:dev /bin/bash -c "source /opt/lsst/software/stack/loadLSST.bash && setup lsst_distrib"
         
         
         
         #    - name: Download artifact
#      uses: actions/download-artifact@v3
#      with:
#          name: lsstdesc-td-env-dev
#          path: /tmp
#        docker load --input /tmp/desc/lsstdesc-td-env-dev.tar

    
  #  - name: Docker login
  #    run: echo '${{ secrets.DOCKERHUB_ACCESSTOK }}' | docker login --username heather999 --password-stdin
      
  #  - name: update docker image
  #    run: |
  #      cd $GITHUB_WORKSPACE 
  #      ls $GITHUB_WORKSPACE
  #      echo $GITHUB_WORKSPACE
 #       ls $GITHUB_WORKSPACE/conda
  #      docker run -u root -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE --name="install-mpich" lsstsqre/centos:7-stack-lsst_distrib-w_2022_10 /bin/bash /$GITHUB_WORKSPACE/docker/install-mpich.sh
  #      docker commit -m"initial testing" install-mpich lsstdesc/td-dev:mpich
  #      docker run -u lsst -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE -w $GITHUB_WORKSPACE/conda --name="td-test-env" lsstdesc/td-dev:mpich /bin/bash /$GITHUB_WORKSPACE/docker/update-docker.sh ${{env.LSST_TAG}}
  #      docker commit -m"initial testing" td-test-env lsstdesc/td-dev:test
  #      docker run -u lsst -w /opt/lsst/software/stack --name="td-setwd" lsstdesc/td-dev:test /bin/bash
  #     docker commit -m"initial testing" td-setwd lsstdesc/td-env:${{env.LSST_TAG}}-${{env.DATE_TAG}}-dev
  #  - name: Test and push
  #    run: |
  #      docker run --rm lsstdesc/td-env:${{env.LSST_TAG}}-${{env.DATE_TAG}}-dev /bin/bash -c "source /opt/lsst/software/stack/loadLSST.bash && setup lsst_distrib && python -c 'import coloredlogs'"
  #      docker push lsstdesc/td-env:${{env.LSST_TAG}}-${{env.DATE_TAG}}-dev
  #      docker tag lsstdesc/td-env:${{env.LSST_TAG}}-${{env.DATE_TAG}}-dev lsstdesc/td-env:dev
  #      docker push lsstdesc/td-env:dev
